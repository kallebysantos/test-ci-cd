# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

# Runs on pushes targeting the default branch
on:
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Display output URL
        run: echo ${{ steps.deployment.outputs.page_url }}

      - name: Create build folder
        run: |
          mkdir build

      - name: Getting .json
        uses: wei/wget@v1
        with:
          args: -O build/button.json https://raw.githubusercontent.com/kallebysantos/pango-ui/HEAD/src/Pango.Components/UI/Button/Button.razor.json
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: production-files
          path: './build'

  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest
    steps:
      - name: Create public folder
        run: |
          mkdir public
          
      - name: Download artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: production-files
          path: './public'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          publish_dir: './public'
